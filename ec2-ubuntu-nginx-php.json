{
    "Description": "Cria uma instancia EC2 usando ubuntu configurado para nginx.",
    "Resources": {
        "SecurityGroupWebTraffic": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": "webServerGroup",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0",
                        "Description": "SSH traffic"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0",
                        "Description": "HTTP traffic"
                    }
                ],
                "GroupDescription": "Security Group for web server",
                "VpcId": "vpc-f8379793"
            }
        },
        "EC2InstanceWeb": {
            "Type":"AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone": "us-east-2a",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    }
                ],
                "ImageId": "ami-0bbe28eb2173f6167",
                "InstanceType": "t2.micro",
                "KeyName": "devops-web-app",
                "NetworkInterfaces": [
                    {
                        "Description": "Primary Interface",
                        "DeviceIndex": "0",
                        "SubnetId": "subnet-60ae650b",
                        "PrivateIpAddress": "172.31.0.4",
                        "GroupSet": [
                            {
                                "Ref": "SecurityGroupWebTraffic"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key" : "Name",
                        "Value" : "nginx-server"
                    }
                ],
                "UserData": {"Fn::Base64": { "Fn::Join" : ["", [
                    "#!/bin/bash\n",
                    "sudo apt-get update\n",
                    "sudo apt install nginx -y\n",
                    "sudo apt install software-properties-common -y\n",
                    "sudo add-apt-repository ppa:ondrej/php -y\n",
                    "sudo apt install php7.4-fpm php7.4-common php7.4-dom php7.4-intl php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-dev php7.4-imap php7.4-mbstring php7.4-soap php7.4-zip php7.4-bcmath -y\n",
                    "sudo apt-get install python3.6\n",
                    "sudo apt install python-pip -y\n",
                    "sudo apt install git -y\n",
                    "cd /usr/local/bin\n",
                    "sudo git clone https://github.com/sampalm/aws-ec2-nginx-cf.git\n",
                    "sudo mv /usr/local/bin/aws-ec2-nginx-cf/default /etc/nginx/sites-available/default -f\n",
                    "sudo systemctl restart nginx\n",
                    "sudo mkdir /var/www/html/api\n",
                    "sudo mv /usr/local/bin/aws-ec2-nginx-cf/index.php  /var/www/html/api/index.php -f\n",
                    "sudo mkdir /var/www/html/logs/\n",
                    "sudo touch /var/www/html/logs/log.txt\n",
                    "sudo chmod +x /var/www/html/logs/log.txt\n",
                    "sudo chmod +x /usr/local/bin/aws-ec2-nginx-cf/script.sh\n",
                    "sudo chmod +x /usr/local/bin/aws-ec2-nginx-cf/cron.sh\n",
                    "sudo -H pip install cloudwatchmon\n",
                    "sudo git clone https://github.com/osiegmar/cloudwatch-mon-scripts-python.git\n",
                    "sudo python3 cloudwatch-mon-scripts-python/setup.py install\n",
                    "sudo sh /usr/local/bin/aws-ec2-nginx-cf/script.sh\n",
                    "sudo sh /usr/local/bin/aws-ec2-nginx-cf/cron.sh\n"
                ]]}}
            }
        }
    }
}